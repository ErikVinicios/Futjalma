<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>